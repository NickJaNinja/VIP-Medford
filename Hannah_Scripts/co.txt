from espresso import espresso
from ase.calculators.emt import EMT
from ase.constraints import FixAtoms
from ase.optimize import QuasiNewton
from ase.build import molecule, surface, add_adsorbate
from ase.spacegroup import crystal
from ase.io import read, write
import sys

current_pw = 500
current_k = 1

a=3.923 #angstrom
from espresso import espresso
from ase.calculators.emt import EMT
from ase.constraints import FixAtoms
from ase.optimize import QuasiNewton
from ase.build import surface
from ase.spacegroup import crystal
from ase.io import read
import sys

current_pw = 500
current_k = 1

a=3.923 #angstrom
Pt=crystal(['Pt'],basis=[(0,0,0)],spacegroup=225,cellpar=[a,a,a,90,90,90])
from espresso import espresso
from ase.calculators.emt import EMT
from ase.constraints import FixAtoms
from ase.optimize import QuasiNewton
from ase.build import molecule, surface, add_adsorbate
from ase.spacegroup import crystal
from ase.io import read, write
import sys

current_pw = 500
current_k = 1

a=3.923 #angstrom
Pt=crystal(['Pt'],basis=[(0,0,0)],spacegroup=225,cellpar=[a,a,a,90,90,90])

h = 1.85

conv_dict = {'energy':1e-6,
            'mixing':0.05,
            'mixing_mode':'local-TF',
            'maxsteps':1000,
            'diag':'cg'}

Pt_slab=surface(Pt,(1,1,1),2)
Pt_slab.center(vacuum=10,axis=2)
CO_molecule = molecule('CO')
CO_molecule.center(10)
from espresso import espresso
from ase.build import molecule
import sys

current_pw = 500
current_k = 1

single_molecule = molecule('CO')
single_molecule.center(10)

conv_dict = {'energy':1e-6,
            'mixing':0.05,
            'mixing_mode':'local-TF',
            'maxsteps':1000,
            'diag':'cg'}

print("Calculating CO Energy")
single_molecule.calc=espresso(pw=current_pw,
                            dw=current_pw*10,
                            kpts=(current_k, current_k,1),
                            xc='PBE',
                            outdir='test_output',
                            convergence=conv_dict)

single_molecule_energy = single_molecule.get_potential_energy()

print("CO Energy: " + str(single_molecule_energy))

f = open("co_" + current_pw + "_" + current_k + ".txt", "w")
f.write(str(single_molecule_energy) + '\n')
f.close()



